name: Checks

on:
  pull_request:
    branches: [main]
    types: [opened, reopened, synchronize]

  push:
    branches: [main]

  workflow_dispatch:

concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }}-${{ github.branch }}

jobs:
  build:
    name: Build client
    runs-on: ubuntu-latest
    steps:
      - uses: haliphax/narf/.github@main

      - name: Build client
        run: npm run build

  e2e:
    name: End-to-end tests
    runs-on: ubuntu-latest
    steps:
      - uses: haliphax/narf/.github@main
        with:
          dependencies: "false"

      - name: Generate cache key
        id: cache-key
        run: echo "DOCKER_CACHE_KEY=${{ hashFiles('.dockerignore', 'Dockerfile', 'package*.json', 'src/**', 'tsconfig.json') }}" >> $GITHUB_OUTPUT

      - uses: actions/cache/restore@v4
        id: cache-restore
        with:
          path: /tmp/docker-image.tgz
          key: ${{ steps.cache-key.outputs.DOCKER_CACHE_KEY }}

      - name: Load cached docker image
        if: steps.cache-restore.outputs.cache-hit == 'true'
        run: gunzip -c /tmp/docker-image.tgz | docker load

      - name: Build docker image
        run: docker build -t narf:latest .

      - name: Cache docker image
        run: docker save narf:latest | gzip -c >/tmp/docker-image.tgz

      - uses: actions/cache/save@v4
        with:
          path: /tmp/docker-image.tgz
          key: ${{ steps.cache-key.outputs.DOCKER_CACHE_KEY }}

      - name: Cypress
        env:
          TERM: xterm-256color
        run: |
          mkdir db
          docker run --rm -d -p 3000:3000 -v $(pwd)/db:/app/db narf:latest
          npm i -D cypress
          npm run e2e

  eslint:
    runs-on: ubuntu-latest
    steps:
      - uses: haliphax/narf/.github@main

      - name: ESLint
        run: npx eslint .

  prettier:
    runs-on: ubuntu-latest
    steps:
      - uses: haliphax/narf/.github@main

      - name: Prettier
        run: npx prettier -lu .

  unit-tests:
    name: Unit tests
    runs-on: ubuntu-latest
    steps:
      - uses: haliphax/narf/.github@main

      - uses: testspace-com/setup-testspace@v1
        with:
          domain: ${{ github.repository_owner }}

      - name: Run unit tests
        run: npm run coverage

      - name: Upload coverage report or add comment
        uses: coverallsapp/github-action@v2
        if: always()
        with:
          file: coverage/clover.xml

      - name: Push result to Testspace server
        run: testspace ./coverage/clover.xml ./coverage/junit.xml
        if: always()
